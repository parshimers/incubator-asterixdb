<!--
 ! Licensed to the Apache Software Foundation (ASF) under one
 ! or more contributor license agreements.  See the NOTICE file
 ! distributed with this work for additional information
 ! regarding copyright ownership.  The ASF licenses this file
 ! to you under the Apache License, Version 2.0 (the
 ! "License"); you may not use this file except in compliance
 ! with the License.  You may obtain a copy of the License at
 !
 !   http://www.apache.org/licenses/LICENSE-2.0
 !
 ! Unless required by applicable law or agreed to in writing,
 ! software distributed under the License is distributed on an
 ! "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ! KIND, either express or implied.  See the License for the
 ! specific language governing permissions and limitations
 ! under the License.
 !-->
<!-- Keep test-suite list in Alphabetical order. -->
<!DOCTYPE test-suite [
             <!ENTITY ComparisonQueries SYSTEM "queries/comparison/ComparisonQueries.xml">
             <!ENTITY DeepEqualQueries SYSTEM "queries/comparison/deep_equal/DeepEqualQueries.xml">
             <!ENTITY ObjectsQueries SYSTEM "queries/objects/ObjectsQueries.xml">
             <!ENTITY TemporalQueries SYSTEM "queries/temporal/TemporalQueries.xml">
             ]>
<test-suite
             xmlns="urn:xml.testframework.asterix.apache.org"
             ResultOffsetPath="results"
             QueryOffsetPath="queries"
             QueryFileExtension=".aql">
  <test-group name="external">
    <test-case FilePath="external">
      <compilation-unit name="invalid-format">
        <output-dir compare="Text">invalid-format</output-dir>
        <expected-error>Unknown format</expected-error>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="flwor">
    <test-case FilePath="flwor">
      <compilation-unit name="query-ASTERIXDB-1463">
        <output-dir compare="Text">query-ASTERIXDB-1485</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="flwor">
      <compilation-unit name="query-ASTERIXDB-1485">
        <output-dir compare="Text">query-ASTERIXDB-1485</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="fulltext">
    <test-case FilePath="fulltext">
      <compilation-unit name="fulltext-03">
        <output-dir compare="Text">fulltext-03</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fulltext">
      <compilation-unit name="fulltext-04">
        <output-dir compare="Text">fulltext-04</output-dir>
        <expected-error>ASX1010: Phrase search in Full-text is not yet supported. Only one keyword per expression is permitted</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fulltext">
      <compilation-unit name="fulltext-05">
        <output-dir compare="Text">fulltext-05</output-dir>
        <expected-error>ASX1010: Phrase search in Full-text is not yet supported. Only one keyword per expression is permitted</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fulltext">
      <compilation-unit name="fulltext-06">
        <output-dir compare="Text">fulltext-06</output-dir>
        <expected-error>ASX1010: Phrase search in Full-text is not yet supported. Only one keyword per expression is permitted</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fulltext">
      <compilation-unit name="fulltext-07">
        <output-dir compare="Text">fulltext-07</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fulltext">
      <compilation-unit name="fulltext-08">
        <output-dir compare="Text">fulltext-08</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fulltext">
      <compilation-unit name="fulltext-index-04">
        <output-dir compare="Text">fulltext-index-04</output-dir>
        <expected-error>ASX1010: Phrase search in Full-text is not yet supported. Only one keyword per expression is permitted</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fulltext">
      <compilation-unit name="fulltext-index-05">
        <output-dir compare="Text">fulltext-index-05</output-dir>
        <expected-error>ASX1010: Phrase search in Full-text is not yet supported. Only one keyword per expression is permitted</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fulltext">
      <compilation-unit name="fulltext-index-06">
        <output-dir compare="Text">fulltext-index-06</output-dir>
        <expected-error>ASX1010: Phrase search in Full-text is not yet supported. Only one keyword per expression is permitted</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fulltext">
      <compilation-unit name="fulltext-index-07">
        <output-dir compare="Text">fulltext-index-07</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="union">
      <compilation-unit name="query-ASTERIXDB-300">
        <output-dir compare="Text">query-ASTERIXDB-300</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="union">
      <compilation-unit name="query-ASTERIXDB-1205">
        <output-dir compare="Text">query-ASTERIXDB-1205</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="union">
      <compilation-unit name="query-ASTERIXDB-1205-2">
        <output-dir compare="Text">query-ASTERIXDB-1205-2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="union">
      <compilation-unit name="query-ASTERIXDB-1205-3">
        <output-dir compare="Text">query-ASTERIXDB-1205-3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="union">
      <compilation-unit name="query-ASTERIXDB-1047">
        <output-dir compare="Text">query-ASTERIXDB-1047</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="union">
      <compilation-unit name="query-ASTERIXDB-1354">
        <output-dir compare="Text">query-ASTERIXDB-1354</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="aggregate">
    <test-case FilePath="aggregate">
      <compilation-unit name="query-ASTERIXDB-923">
        <output-dir compare="Text">query-ASTERIXDB-923</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="aggregate">
      <compilation-unit name="query-ASTERIXDB-1216">
        <output-dir compare="Text">query-ASTERIXDB-1216</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="aggregate">
      <compilation-unit name="query-ASTERIXDB-1727">
        <output-dir compare="Text">query-ASTERIXDB-1727</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="aggregate">
      <compilation-unit name="group_only">
        <output-dir compare="Text">group_only</output-dir>
      </compilation-unit>
    </test-case>
    <!-- TODO(madhusudancs): These tests that test for local_<agg>/global_<agg> functions should be removed, but
      before that we should modify the code to make sure those built-in functions are still defined but not exposed
      by AQL, so leaving these test cases commented.
    -->
    <test-case FilePath="aggregate">
      <compilation-unit name="query-ASTERIXDB-1230">
        <output-dir compare="Text">query-ASTERIXDB-1230</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="boolean">
    <test-case FilePath="constructor">
      <compilation-unit name="polygon-from-open-list_issue1627">
        <output-dir compare="Text">polygon-from-open-list_issue1627</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="custord">
  </test-group>
  <test-group name="dapd">
  </test-group>
  <test-group name="dml">
    <test-case FilePath="dml">
      <compilation-unit name="query-ASTERIXDB-867">
        <output-dir compare="Text">query-ASTERIXDB-867</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="dml">
      <compilation-unit name="query-ASTERIXDB-1406">
        <output-dir compare="Text">query-ASTERIXDB-1406</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="failure">
  </test-group>
  <test-group name="fuzzyjoin">
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_1">
        <output-dir compare="Text">basic-1_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_1_1">
        <output-dir compare="Text">basic-1_1_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_1_2">
        <output-dir compare="Text">basic-1_1_2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_1_3">
        <output-dir compare="Text">basic-1_1_3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_2_1">
        <output-dir compare="Text">basic-1_2_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_2_2">
        <output-dir compare="Text">basic-1_2_2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_2_3">
        <output-dir compare="Text">basic-1_2_3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_2_4">
        <output-dir compare="Text">basic-1_2_4</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_2_5">
        <output-dir compare="Text">basic-1_2_5</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_2_6">
        <output-dir compare="Text">basic-1_2_6</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_2_7">
        <output-dir compare="Text">basic-1_2_7</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="basic-1_3_1">
        <output-dir compare="Text">basic-1_3_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-1_1">
        <output-dir compare="Text">dblp-1_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-1_2.1.1">
        <output-dir compare="Text">dblp-1_2.1.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-1_2.1">
        <output-dir compare="Text">dblp-1_2.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-1_2">
        <output-dir compare="Text">dblp-1_2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2.1_5.3.1">
        <output-dir compare="Text">dblp-2.1_5.3.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2_1">
        <output-dir compare="Text">dblp-2_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2_2">
        <output-dir compare="Text">dblp-2_2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2.2">
        <output-dir compare="Text">dblp-2.2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2_3">
        <output-dir compare="Text">dblp-2_3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2_4">
        <output-dir compare="Text">dblp-2_4</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2_5.1">
        <output-dir compare="Text">dblp-2_5.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2_5.2">
        <output-dir compare="Text">dblp-2_5.2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2_5.3.1">
        <output-dir compare="Text">dblp-2_5.3.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2_5.3">
        <output-dir compare="Text">dblp-2_5.3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-2_5">
        <output-dir compare="Text">dblp-2_5</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-3_1.1">
        <output-dir compare="Text">dblp-3_1.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-3_1.2">
        <output-dir compare="Text">dblp-3_1.2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-3_1">
        <output-dir compare="Text">dblp-3_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-aqlplus_1">
        <output-dir compare="Text">dblp-aqlplus_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-aqlplus_2">
        <output-dir compare="Text">dblp-aqlplus_2</output-dir>
        <expected-error>Type mismatch: expected value of type array or multiset, but got the value of type string</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-2_1">
        <output-dir compare="Text">dblp-csx-2_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-2_2">
        <output-dir compare="Text">dblp-csx-2_2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-2_3">
        <output-dir compare="Text">dblp-csx-2_3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-2_4">
        <output-dir compare="Text">dblp-csx-2_4</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-2_5.1">
        <output-dir compare="Text">dblp-csx-2_5.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-2_5.2">
        <output-dir compare="Text">dblp-csx-2_5.2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-2_5.3.1">
        <output-dir compare="Text">dblp-csx-2_5.3.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-2_5.3">
        <output-dir compare="Text">dblp-csx-2_5.3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-2_5">
        <output-dir compare="Text">dblp-csx-2_5</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_1">
        <output-dir compare="Text">dblp-csx-3_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_2">
        <output-dir compare="Text">dblp-csx-3_2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_3">
        <output-dir compare="Text">dblp-csx-3_3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_4">
        <output-dir compare="Text">dblp-csx-3_4</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_5.1">
        <output-dir compare="Text">dblp-csx-3_5.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_5.2">
        <output-dir compare="Text">dblp-csx-3_5.2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_5.3.1">
        <output-dir compare="Text">dblp-csx-3_5.3.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_5.3">
        <output-dir compare="Text">dblp-csx-3_5.3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_5.4.1">
        <output-dir compare="Text">dblp-csx-3_5.4.1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_5.4">
        <output-dir compare="Text">dblp-csx-3_5.4</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-3_5">
        <output-dir compare="Text">dblp-csx-3_5</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
        <compilation-unit name="dblp-csx-4.1.1">
            <output-dir compare="Text">dblp-csx-4.1.1</output-dir>
        </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
        <compilation-unit name="dblp-csx-4.1.2">
            <output-dir compare="Text">dblp-csx-4.1.2</output-dir>
        </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
        <compilation-unit name="dblp-csx-4.2.1">
            <output-dir compare="Text">dblp-csx-4.2.1</output-dir>
        </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
        <compilation-unit name="dblp-csx-4.2.2">
            <output-dir compare="Text">dblp-csx-4.2.2</output-dir>
        </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
        <compilation-unit name="dblp-csx-4.3.1">
            <output-dir compare="Text">dblp-csx-4.3.1</output-dir>
        </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
        <compilation-unit name="dblp-csx-4.3.2">
            <output-dir compare="Text">dblp-csx-4.3.2</output-dir>
        </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
        <compilation-unit name="dblp-csx-4.4.1">
            <output-dir compare="Text">dblp-csx-4.4.1</output-dir>
        </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
        <compilation-unit name="dblp-csx-4.4.2">
            <output-dir compare="Text">dblp-csx-4.4.2</output-dir>
        </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-aqlplus_1">
        <output-dir compare="Text">dblp-csx-aqlplus_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-aqlplus_2">
        <output-dir compare="Text">dblp-csx-aqlplus_2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-aqlplus_3">
        <output-dir compare="Text">dblp-csx-aqlplus_3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-aqlplus_4">
        <output-dir compare="Text">dblp-csx-aqlplus_4</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-aqlplus_5">
        <output-dir compare="Text">dblp-csx-aqlplus_5</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-aqlplus_6">
        <output-dir compare="Text">dblp-csx-aqlplus_6</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-csx-dblp-aqlplus_1">
        <output-dir compare="Text">dblp-csx-dblp-aqlplus_1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-lookup_1">
        <output-dir compare="Text">dblp-lookup_1</output-dir>
      </compilation-unit>
    </test-case>
    <!--
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="dblp-splits-3_1">
        <output-dir compare="Text">dblp-splits-3_1</output-dir>
      </compilation-unit>
    </test-case>
    -->
    <test-case FilePath="fuzzyjoin">
      <compilation-unit name="opentype">
        <output-dir compare="Text">opentype</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="index-join">
    <test-case FilePath="index-join">
      <compilation-unit name="btree-secondary-self-equi-join_01">
        <output-dir compare="Text">btree-secondary-self-equi-join_01</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="index-join">
      <compilation-unit name="rtree-spatial-self-intersect-point">
        <output-dir compare="Text">rtree-spatial-self-intersect-point</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="index-selection">
    <test-case FilePath="index-selection">
      <compilation-unit name="intersection">
        <output-dir compare="Text">intersection</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="index-selection">
      <compilation-unit name="intersection-with-filter">
        <output-dir compare="Text">intersection-with-filter</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="index-selection">
      <compilation-unit name="intersection_with_nodegroup">
        <output-dir compare="Text">intersection</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="list">
    <test-case FilePath="list">
      <compilation-unit name="ordered-list-constructor_04">
        <output-dir compare="Text">ordered-list-constructor_04</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="list">
      <compilation-unit name="unordered-list-constructor_04">
        <output-dir compare="Text">unordered-list-constructor_04</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="list">
      <compilation-unit name="query-ASTERIXDB-673">
        <output-dir compare="Text">query-ASTERIXDB-673</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="list">
      <compilation-unit name="query-ASTERIXDB-1131">
        <output-dir compare="Text">query-ASTERIXDB-1131</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="list">
      <compilation-unit name="query-ASTERIXDB-1131-2">
        <output-dir compare="Text">query-ASTERIXDB-1131-2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="list">
      <compilation-unit name="query-ASTERIXDB-1212">
        <output-dir compare="Text">query-ASTERIXDB-1212</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="list">
      <compilation-unit name="query-ASTERIXDB-1212-open">
        <output-dir compare="Text">query-ASTERIXDB-1212-open</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="list">
      <compilation-unit name="query-ASTERIXDB-1212-2">
        <output-dir compare="Text">query-ASTERIXDB-1212-2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="list">
      <compilation-unit name="query-ASTERIXDB-1212-2-open">
        <output-dir compare="Text">query-ASTERIXDB-1212-2-open</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="meta">
    <test-case FilePath="meta">
      <compilation-unit name="query_dataset_with_meta-1">
        <output-dir compare="Text">query_dataset_with_meta-1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="meta">
      <compilation-unit name="query_dataset_with_meta-2">
        <output-dir compare="Text">query_dataset_with_meta-2</output-dir>
      </compilation-unit>
    </test-case>
    <!-- see ASTERIXDB-1881
    <test-case FilePath="meta">
      <compilation-unit name="query_dataset_with_meta_primary_index-1">
        <output-dir compare="Text">query_dataset_with_meta_primary_index-1</output-dir>
      </compilation-unit>
    </test-case>
    -->
    <test-case FilePath="meta">
      <compilation-unit name="query_dataset_with_meta_failure">
        <output-dir compare="Text">query_dataset_with_meta_failure</output-dir>
        <expected-error>Cannot resolve to ambiguity on the meta function call -- there are more than one dataset choices!</expected-error>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="misc">
    <test-case FilePath="misc">
      <compilation-unit name="ifthenelse_02">
        <output-dir compare="Text">ifthenelse_02</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="misc">
      <compilation-unit name="query-ASTERIXDB-865">
        <output-dir compare="Text">query-ASTERIXDB-865</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="misc">
      <compilation-unit name="query-ASTERIXDB-1203">
        <output-dir compare="Text">query-ASTERIXDB-1203</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="misc">
      <compilation-unit name="query-ASTERIXDB-819">
        <output-dir compare="Text">query-ASTERIXDB-819</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="misc">
      <compilation-unit name="query-ASTERIXDB-819-2">
        <output-dir compare="Text">query-ASTERIXDB-819-2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="misc">
      <compilation-unit name="query-ASTERIXDB-971">
        <output-dir compare="Text">query-ASTERIXDB-971-aql</output-dir>
      </compilation-unit>
    </test-case>
      <test-case FilePath="open-index-enforced/error-checking">
        <compilation-unit name="object-type-collision">
          <output-dir compare="Text">object-type-collision</output-dir>
          <expected-error>ASX1051: Cannot create enforced index on "[value]" field. The field is closed type.</expected-error>
        </compilation-unit>
      </test-case>
    </test-group>
    <test-group name="nested-open-index/index-selection">
    <test-case FilePath="nonpure">
      <compilation-unit name="global-datetime-use-index">
        <output-dir compare="Text">global-datetime-use-index</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="numeric">
    <test-case FilePath="numeric">
      <compilation-unit name="issue_1166">
        <output-dir compare="Text">issue_1166</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="open-closed">
  </test-group>
  <test-group name="orderby_limit">
    <test-case FilePath="orderby_limit">
      <compilation-unit name="limit_on_variable_01">
        <output-dir compare="Text">limit_on_variable_01</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="orderby_limit">
      <compilation-unit name="orderby_limit_01">
        <output-dir compare="Text">orderby_limit_01</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="orderby_limit">
      <compilation-unit name="orderby_limit_02">
        <output-dir compare="Text">orderby_limit_02</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="orderby_limit">
      <compilation-unit name="orderby_limit_offset_01">
        <output-dir compare="Text">orderby_limit_offset_01</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="orderby_limit">
      <compilation-unit name="orderby_limit_primary_index_01">
        <output-dir compare="Text">orderby_limit_primary_index_01</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="range-hints">
    <!-- Fail sporadically!!!!! disabled because of that -->
  </test-group>
  &ObjectsQueries;
  &DeepEqualQueries;
  <test-group name="string">
    <test-case FilePath="string">
      <compilation-unit name="ends-with6">
        <output-dir compare="Text">ends-with6</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="string">
      <compilation-unit name="ends-with7">
        <output-dir compare="Text">ends-with7</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="string">
      <compilation-unit name="ends-with8">
        <output-dir compare="Text">ends-with8</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="string">
      <compilation-unit name="starts-with6">
        <output-dir compare="Text">starts-with6</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="string">
      <compilation-unit name="starts-with7">
        <output-dir compare="Text">starts-with7</output-dir>
      </compilation-unit>
    </test-case>
    <!--
    <test-case FilePath="string">
      <compilation-unit name="starts-with8">
        <output-dir compare="Text">starts-with8</output-dir>
      </compilation-unit>
    </test-case>
    -->
    <test-case FilePath="string">
      <compilation-unit name="string-equal-public">
        <output-dir compare="Text">string-equal-public</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="string">
      <compilation-unit name="substring-after-5">
        <output-dir compare="Text">substring-after-5</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="string">
      <compilation-unit name="substring-after-6">
        <output-dir compare="Text">substring-after-5</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="string">
      <compilation-unit name="query-ASTERIXDB-1190">
        <output-dir compare="Text">query-ASTERIXDB-1190</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="tpch">
    <test-case FilePath="tpch">
      <compilation-unit name="q01-ASTERIXDB-830">
        <output-dir compare="Text">q01_pricing_summary_report_nt</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="tpch">
      <compilation-unit name="query-ASTERIXDB-1127">
        <output-dir compare="Text">query-ASTERIXDB-1127</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="writers">
  </test-group>
  <test-group name="cross-dataverse">
    <test-case FilePath="cross-dataverse">
      <compilation-unit name="drop-dataverse">
        <output-dir compare="Text">drop-dataverse</output-dir>
        <expected-error>Cannot drop dataverse. Type a.a used by dataset b.b1</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="cross-dataverse">
      <compilation-unit name="drop-type-used-elsewhere">
        <output-dir compare="Text">drop-type-used-elsewhere</output-dir>
        <expected-error>Cannot drop type a.a being used by dataset b.b1</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="cross-dataverse">
      <compilation-unit name="drop-type-used-here-dataset">
        <output-dir compare="Text">drop-type-used-here-dataset</output-dir>
        <expected-error>Cannot drop type c.a being used by dataset c.a1</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="cross-dataverse">
      <compilation-unit name="drop-type-used-here-type">
        <output-dir compare="Text">drop-type-used-here-type</output-dir>
        <expected-error>Cannot drop type c.a being used by type c.b</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="cross-dataverse">
      <compilation-unit name="query-dataset-with-foreign-type">
        <output-dir compare="Text">query-dataset-with-foreign-type</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="user-defined-functions">
    <test-case FilePath="user-defined-functions">
      <compilation-unit name="query-ASTERIXDB-1308-1">
        <output-dir compare="Text">query-ASTERIXDB-1308-1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="user-defined-functions">
      <compilation-unit name="query-ASTERIXDB-1317">
        <output-dir compare="Text">query-ASTERIXDB-1317</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="load">
      <compilation-unit name="dataset-with-meta">
        <output-dir compare="Text">dataset-with-meta</output-dir>
        <expected-error>load dataset is not supported on Datasets with Meta records</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="load">
      <compilation-unit name="file-not-found">
        <output-dir compare="Text">none</output-dir>
        <expected-error>ASX3077: bla: path not found</expected-error>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="big-object">
    <test-case FilePath="big-object">
      <compilation-unit name="big_object_load">
        <output-dir compare="Text">big_object_load</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="big-object">
      <compilation-unit name="big_object_bulkload">
        <output-dir compare="Text">big_object_bulkload</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="big-object">
      <compilation-unit name="big_object_insert">
        <output-dir compare="Text">big_object_insert</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="big-object">
      <compilation-unit name="big_object_load_only_20M">
        <output-dir compare="Text">big_object_load_only_20M</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="big-object" repeat="5">
      <compilation-unit name="big_object_feed_20M">
        <output-dir compare="Text">big_object_feed_20M</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="temporal">
        &TemporalQueries;
  </test-group>
  <test-group name="leftouterjoin">
    <test-case FilePath="leftouterjoin">
      <compilation-unit name="query-ASTERIXDB-769">
        <output-dir compare="Text">query-ASTERIXDB-769</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="index-leftouterjoin">
    <test-case FilePath="index-leftouterjoin">
      <compilation-unit name="probe-pidx-with-join-btree-pidx1">
        <output-dir compare="Text">probe-pidx-with-join-btree-pidx1</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="types">
    <test-case FilePath="types">
      <compilation-unit name="domain_boundaries">
        <output-dir compare="Text">domain_boundaries</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="types">
      <compilation-unit name="domain_boundaries_error">
        <output-dir compare="Text">domain_boundaries_error</output-dir>
        <expected-error>ASX0006: Invalid format for int8 in tinyint</expected-error>
        <expected-error>ASX0006: Invalid format for int16 in smallint</expected-error>
        <expected-error>ASX0006: Invalid format for int32 in integer</expected-error>
        <expected-error>ASX0006: Invalid format for int64 in bigint</expected-error>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="cleanjson">
    <test-case FilePath="json">
      <compilation-unit name="issue-ASTERIXDB-1165">
        <output-dir compare="Clean-JSON">issue-ASTERIXDB-1165</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="binary">
    <test-case FilePath="binary">
      <compilation-unit name="query_id">
        <output-dir compare="Text">query_id</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
</test-suite>
